{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["Filter","eventHandler","onChange","PersonForm","addPerson","handleAddName","handleAddNumber","id","onSubmit","type","Person","person","deletePerson","name","number","onClick","Persons","persons_array","map","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","isError","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notificationMessage","setNotificationMessage","notificationError","setNotificationError","useEffect","phonebookService","personsToShow","toUpperCase","includes","event","target","value","preventDefault","personsObject","find","p","window","confirm","changedPerson","returnedPerson","setTimeout","console","log","catch","error","concat","document","getElementById","reset","ReactDOM","render"],"mappings":"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","file":"static/js/main.ac4f7a6b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ eventHandler }) => (\n    <div>\n        filter shown with <input onChange={eventHandler} />\n    </div>\n)\n\nexport default Filter","import React from \"react\"\n\nconst PersonForm = ({ addPerson, handleAddName, handleAddNumber }) => (\n    <form id=\"FORM\" onSubmit={addPerson}>\n        <div>\n            name: <input onChange={handleAddName} />\n        </div>\n        <div>\n            number: <input onChange={handleAddNumber} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n    \n)\n\nexport default PersonForm","import React from \"react\"\n// import phonebookService from \"../services/phonebook\"\n\nconst Person = ({ person, deletePerson }) => (\n    <div>\n        {person.name} {person.number}\n        <button onClick={deletePerson}>delete</button>\n    </div>\n)\n\nconst Persons = ({ persons_array, deletePerson }) => (\n    <div>\n        {persons_array.map(person =>\n            <Person\n                key={person.name}\n                person={person}\n                deletePerson={() => deletePerson(person)}\n            />\n        )}\n    </div>\n)\n\nexport default Persons","import axios from \"axios\"\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\n// eslint-disable-next-line\nexport default { getAll, create, deletePerson, update }\n","import React from 'react'\n\nconst Notification = ({ message, isError }) => {\n    const addStyle = {\n        color: \"green\",\n        background: \"lightgrey\",\n        fontSize: 20,\n        borderStyle: \"solid\",\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    const errorStyle = {\n        color: \"red\",\n        background: \"lightgrey\",\n        fontSize: 20,\n        borderStyle: \"solid\",\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    if (isError) {\n        return (\n            <div style={errorStyle}>\n                {message}\n            </div>\n        )\n    }\n    else{\n        return (\n            <div style={addStyle}>\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default Notification\n","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport phonebookService from './services/phonebook'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [notificationMessage, setNotificationMessage] = useState(null)\n    const [notificationError, setNotificationError] = useState(false)\n\n    useEffect(() => {\n        phonebookService\n            .getAll()\n            .then(response => {\n                setPersons(response)\n            })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personsObject = {\n            name: newName,\n            number: newNumber\n        }\n        const person = persons.find(p => p.name === newName)\n        if (person) {\n            if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n                const changedPerson = { ...person, number: newNumber }\n                phonebookService\n                    .update(person.id, changedPerson)\n                    .then(returnedPerson => {\n                        setNotificationMessage(`updated ${person.name}`)\n                        setNotificationError(false)\n                        setTimeout(() => {\n                            setNotificationMessage(null)\n                            setNotificationError(null)\n                        }, 5000)\n                        setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n                        console.log(`Updated ${person.name}`)\n                    })\n                    .catch(error => {\n                        setNotificationMessage(\n                            `Information of ${person.name} has alredy been removed from the server`\n                        )\n                        setNotificationError(true)\n                        setTimeout(() => {\n                            setNotificationMessage(null)\n                            setNotificationError(null)\n                        }, 5000)\n                        setPersons(persons.filter(p => p.id !== person.id))\n                    })\n            }\n        }\n        else {\n            phonebookService\n                .create(personsObject)\n                .then(returnedPerson => {\n                    setNotificationMessage(`Added ${newName}`)\n                    setNotificationError(false)\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                        setNotificationError(null)\n                    }, 5000)\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    console.log(`Added ${newName}`)\n                })\n        }\n        document.getElementById(\"FORM\").reset()\n    }\n\n    const handleAddName = (event) => {\n        // console.log(event.target.value)\n        setNewName(event.target.value)\n    }\n\n    const handleAddNumber = (event) => {\n        // console.log(event.target.value)\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilter = (event) => {\n        // console.log(event.target.value)\n        setFilter(event.target.value)\n    }\n\n    const deletePerson = person => {\n        if (window.confirm(`Delete ${person.name} ?`)) {\n            phonebookService\n                .deletePerson(person.id)\n                .then(response => {\n                    setNotificationMessage(`Deleted ${person.name}`)\n                    setNotificationError(false)\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                        setNotificationError(null)\n                    }, 5000)\n                    setPersons(persons.filter(p => p.id !== person.id))\n                    console.log(`Deleted ${person.name} with id ${person.id}`)\n                })\n        }\n    }\n\n\n    const personsToShow = persons.filter(person =>\n        person.name.toUpperCase().includes(filter.toUpperCase())\n    )\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notificationMessage} isError={notificationError} />\n            <Filter eventHandler={handleFilter} />\n\n            <h3>add a new</h3>\n            <PersonForm\n                addPerson={addPerson}\n                handleAddName={handleAddName}\n                handleAddNumber={handleAddNumber}\n            />\n\n            <h3>Numbers</h3>\n            <Persons\n                persons_array={personsToShow}\n                deletePerson={deletePerson}\n            />\n        </div>\n    )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}